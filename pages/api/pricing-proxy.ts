// --- ‡πÑ‡∏ü‡∏•‡πå 3: pages/api/pricing-proxy.ts ---
// ‡πÑ‡∏ü‡∏•‡πå‡∏ô‡∏µ‡πâ‡∏Ñ‡∏∑‡∏≠ Next.js API Route ‡∏ó‡∏µ‡πà‡∏ó‡∏≥‡∏´‡∏ô‡πâ‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡πá‡∏ô Proxy
// ‡∏Ñ‡∏ß‡∏£‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏ü‡∏•‡πÄ‡∏î‡∏≠‡∏£‡πå 'pages/api/' ‡πÉ‡∏ô‡πÇ‡∏õ‡∏£‡πÄ‡∏à‡∏Å‡∏ï‡πå Next.js ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
import type { NextApiRequest, NextApiResponse } from 'next';

// üö® ‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç: ‡πÅ‡∏ó‡∏ô‡∏ó‡∏µ‡πà URL ‡∏ô‡∏µ‡πâ‡∏î‡πâ‡∏ß‡∏¢ Web App URL ‡∏à‡∏£‡∏¥‡∏á‡∏Ç‡∏≠‡∏á Google Apps Script ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
// ‡∏Ñ‡∏∏‡∏ì‡∏ï‡πâ‡∏≠‡∏á Deploy Google Apps Script ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î Web App (Execute as: Me, Who has access: Anyone)
const GAS_WEB_APP_URL = 'https://script.google.com/macros/s/AKfycbz3WJmHNJ2h8Yj1rm2tc_mXj6JNCYz8T-yOmg9kC6aKgpAAuXmH5Z3DNZQF8ecGZUGw/exec';

export default async function handler(
  req: NextApiRequest,
  res: NextApiResponse
) {
  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏Ç‡∏≠ GET ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ö‡∏£‡∏¥‡∏Å‡∏≤‡∏£‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
  if (req.method === 'GET') {
    try {
      // ‡∏™‡πà‡∏á‡∏Ñ‡∏≥‡∏Ç‡∏≠‡πÑ‡∏õ‡∏¢‡∏±‡∏á GAS doGet ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
      const gasResponse = await fetch(`${GAS_WEB_APP_URL}`);
      if (!gasResponse.ok) {
        throw new Error(`Google Apps Script GET failed with status: ${gasResponse.status}`);
      }
      const data = await gasResponse.json();
      return res.status(200).json(data);
    } catch (error: any) {
      console.error("Error fetching data from GAS:", error);
      return res.status(500).json({ error: 'Failed to fetch data', message: error.message });
    }
  }

  // ‡∏à‡∏±‡∏î‡∏Å‡∏≤‡∏£‡∏Ñ‡∏≥‡∏Ç‡∏≠ POST ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏û‡∏¥‡πà‡∏°, ‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï, ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
  if (req.method === 'POST') {
    try {
      // ‡∏™‡πà‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• body ‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î‡∏à‡∏≤‡∏Å Next.js ‡πÑ‡∏õ‡∏¢‡∏±‡∏á GAS doPost
      // GAS doPost ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏à‡∏∞‡∏ó‡∏≥‡∏Å‡∏≤‡∏£‡πÅ‡∏¢‡∏Å `method` (add, update, delete) ‡πÅ‡∏•‡∏∞‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡πÄ‡∏≠‡∏á
      const gasResponse = await fetch(GAS_WEB_APP_URL, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
        },
        body: JSON.stringify(req.body),
      });

      if (!gasResponse.ok) {
        throw new Error(`Google Apps Script POST failed with status: ${gasResponse.status}`);
      }

      const result = await gasResponse.json();
      return res.status(200).json(result);
    } catch (error: any) {
      console.error("Error sending data to GAS:", error);
      return res.status(500).json({ error: 'Failed to perform operation', message: error.message });
    }
  }

  // ‡∏´‡∏≤‡∏Å‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà‡πÄ‡∏°‡∏ò‡∏≠‡∏î GET ‡∏´‡∏£‡∏∑‡∏≠ POST ‡πÉ‡∏´‡πâ‡∏™‡πà‡∏á‡∏Ñ‡∏∑‡∏ô 405 Method Not Allowed
  res.setHeader('Allow', ['GET', 'POST']);
  return res.status(405).end(`Method ${req.method} Not Allowed`);
}
